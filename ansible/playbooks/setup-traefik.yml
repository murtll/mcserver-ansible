- name: Setup Traefik
  hosts: traefik
  become: false
  tasks:
    - name: Create network
      community.docker.docker_network:
        name: traefik-net
        attachable: true

    - name: Create certificates volume
      community.docker.docker_volume:
        name: traefik-certificates

    - name: Run Traefik container
      community.docker.docker_container:
        name: traefik
        image: traefik:v2.9
        state: started
        restart_policy: always
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - traefik-certificates:/certificates
        networks:
          - name: traefik-net
        command: |
          --log.level=INFO
          --api.dashboard=true
          --accesslog
          --ping
          --providers.docker
          --providers.docker.exposedbydefault=false
          --entrypoints.http.address=:80
          --entrypoints.https.address=:443
          --entrypoints.http.http.redirections.entrypoint.to=https
          --entrypoints.https.http.tls.certresolver=letsencrypt
          --certificatesresolvers.letsencrypt.acme.httpchallenge=true
          --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
          --certificatesresolvers.letsencrypt.acme.email=esskeetiter@gmail.com
          --certificatesresolvers.letsencrypt.acme.storage=/certificates/certificates.json
          --metrics.influxdb2
          --metrics.influxdb2.address=http://influxdb:8086
          --metrics.influxdb2.token={{ influxdb_token }}
          --metrics.influxdb2.org={{ influxdb_org }}
          --metrics.influxdb2.bucket={{ influxdb_bucket }}
          --metrics.influxdb2.addrouterslabels
        labels:
          traefik.enable: "true"
          traefik.http.routers.dashboard.rule: "Host(`traefik.mcbrawl.ru`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
          traefik.http.routers.dashboard.entrypoints: https
          traefik.http.routers.dashboard.tls: "true"
          traefik.http.routers.dashboard.tls.certResolver: letsencrypt
          traefik.http.routers.dashboard.service: api@internal
          traefik.http.routers.dashboard.middlewares: auth
          traefik.http.middlewares.auth.basicauth.users: "admin:$apr1$bayXJJOm$EStg43nslnoGc3I9oWYuQ0"
        healthcheck:
          test: traefik healthcheck --ping
          interval: 10s
          retries: 5
          timeout: 2s
          start_period: 5s
        log_driver: json-file
        log_options:
          max-size: 10m
